# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
    - image: circleci/node:8.10

    working_directory: ~/ur-web

    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "yarn.lock" }}
        - v1-dependencies-

    - run:
        name: Install local dependencies
        command: yarn

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "yarn.lock" }}

    - run:
        name: Linting
        command: yarn lint

#    - run:
#        name: Testing
#        command: yarn test --browsers ChromeHeadless --progress=false --watch=false

    - run:
        name: Building
        command: yarn build --prod

    - run:
        name: Generating Documentation
        command: yarn compodoc

    - save_cache:
        key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - dist

    - save_cache:
        key: v1-doc-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - doc

  deploy:
    working_directory: ~/ur-web

    docker:
    - image: circleci/node:8.10

    steps:
    - restore_cache:
        keys:
        - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

    - run:
        name: Removing Remote Files
        command: ssh -oStrictHostKeyChecking=no $SSH_USER@$SSH_HOST rm -rf /var/www/ur-web/*

    - run:
        name: Deploy Over SSH
        command: scp -rv ./dist/web/* $SSH_USER@$SSH_HOST:/var/www/ur-web/

  doc:
    working_directory: ~/ur-web

    docker:
    - image: circleci/node:8.10

    steps:
    - restore_cache:
        keys:
        - v1-doc-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

    - run:
        name: Removing Remote Files
        command: ssh -oStrictHostKeyChecking=no $SSH_USER@$SSH_HOST rm -rf /var/www/ur-web/*

    - run:
        name: Deploy Documentation Over SSH
        command: scp -rv ./doc/* $SSH_USER@$SSH_HOST:/var/www/doc/

workflows:
  version: 2

  workflow:
    jobs:
    - build:
        filters:
          branches:
            only: master
    - deploy:
        requires:
        - build
        filters:
          branches:
            only: master
    - doc:
        requires:
        - build
        filters:
          branches:
            only: master
